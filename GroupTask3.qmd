---
title: "Group Task 3"
author:
  - name: Yves-Langston Mays
    email: ymmays@cougarnet.uh.edu
    affiliation:
      - name: University of Houston Main Campus
        department: Natural Sciences & Mathematics
        city: Houston
        country: USA
  - name: Author 2
    email: email2@uh.edu
    affiliation:
      - name: University of Houston Main Campus
        department: Natural Sciences & Mathematics
        city: Houston
        country: USA
  - name: Author 3
    email: email3@uh.edu
    affiliation:
      - name: University of Houston Main Campus
        department: Natural Sciences & Mathematics
        city: Houston
        country: USA
abstract: |
  Abstract goes here. 
keywords: [keyword1, keyword2, keyword3]
format:
  pdf:
    template: GroupTask3.tex
    pdf-engine: lualatex
    keep-tex: true
    toc: true
    number-sections: true
    cite-method: biblatex
bibliography: references.bib
---

\newpage

# Introduction

Example citation [@asgari2022].

\newpage

# Background

More discussion of house fly immune systems [@asgari2022].

\newpage

# Methodology

```{r}
#| include: false
#libraries
library(zoo)
library(sf)
library(leaflet)
library(dplyr)
```

```{r}
#| include: false
#data collection and prep
hurdat2 = read.csv("hurdat2-1851-2023-051124.txt", header=F, as.is=T)

names(hurdat2) = c("DATE", "TIME_UTC", "POINT_TYPE", "STATUS", 
               "LATITUDE", "LONGITUDE", "WINDSPEED_KT", "PRESURE_MB", 
               "NE_34KT", "SE_34KT", "NW_34_KT", "SW_34_KT",
               "NE_50KT", "SE_50KT", "NW_50_KT", "SW_50_KT",
               "NE_64KT", "SE_64KT", "NW_64_KT", "SW_64_KT")

# this is the panel we need for the visualization
panel = cbind(HID = NA, HNAME = NA, hurdat2)

panel$HID = ifelse(grepl("AL|EP|CP", panel$DATE), panel$DATE, NA)

panel$HNAME = ifelse(grepl("AL|EP|CP", panel$DATE), panel$TIME_UTC, NA)

panel$HID = na.locf(panel$HID)

panel$HNAME = na.locf(panel$HNAME)

panel = panel[!grepl("AL|EP|CP", panel$DATE), ]


# these are the coordinates
panel$LATITUDE = trimws(panel$LATITUDE)
panel$LONGITUDE = trimws(panel$LONGITUDE)
panel$STATUS = trimws(panel$STATUS)

panel$LATITUDE = ifelse(grepl("S", panel$LATITUDE), paste0("-", panel$LATITUDE), panel$LATITUDE)
panel$LONGITUDE = ifelse(grepl("W", panel$LONGITUDE), paste0("-", panel$LONGITUDE), panel$LONGITUDE)

panel$LATITUDE = as.numeric(sub("N|S", "", panel$LATITUDE))
panel$LONGITUDE = as.numeric(sub("E|W", "", panel$LONGITUDE))


# gulf storms
gulf_storms = subset(panel, 
                    LATITUDE >= 18 & LATITUDE <= 30 & 
                    LONGITUDE >= -98 & LONGITUDE <= -80)

```



```{r}
gulf_cities <- data.frame(
  City = c("New Orleans", "Houston", "Tampa", "Miami", "Corpus Christi", 
           "Pensacola", "Mobile", "Galveston", "Biloxi", "Key West",
           "Veracruz", "Tampico", "Campeche", "Cancún", "Mérida",
           "Ciudad del Carmen", "Progreso", "Coatzacoalcos", "Tuxpan", "Havana",
           "Varadero", "Cienfuegos", "Belize City", "George Town", "Nassau"),
  Country = c(rep("USA", 10), rep("Mexico", 9), rep("Cuba", 3), "Belize", "Cayman Islands", "Bahamas"),
  Latitude = c(30.0, 29.8, 28.0, 25.8, 27.8, 30.4, 30.7, 29.3, 30.4, 24.6,
               19.2, 22.2, 19.8, 21.2, 21.0, 18.7, 21.3, 18.1, 21.0, 23.1,
               23.2, 22.2, 17.5, 19.3, 25.0),
  Longitude = c(-90.1, -96.4, -82.5, -80.2, -97.4, -87.2, -88.0, -94.8, -88.9, -81.8,
                -96.1, -97.9, -90.5, -86.9, -89.6, -91.8, -89.7, -94.5, -97.4, -82.4,
                -81.2, -80.4, -88.2, -81.4, -77.4)
)

# boundaries for gulf of mexico region
gulf_bounds <- list(
  lat_min = min(gulf_cities$Latitude) - 1,  
  lat_max = max(gulf_cities$Latitude) + 1,
  lon_min = min(gulf_cities$Longitude) - 1,
  lon_max = max(gulf_cities$Longitude) + 1
)

gulf_storms <- subset(panel, 
                     LATITUDE >= gulf_bounds$lat_min & 
                     LATITUDE <= gulf_bounds$lat_max & 
                     LONGITUDE >= gulf_bounds$lon_min & 
                     LONGITUDE <= gulf_bounds$lon_max)


gulf_storms$YEAR <- as.numeric(substring(gulf_storms$DATE, 1, 4))
gulf_storms$MONTH <- as.numeric(substring(gulf_storms$DATE, 5, 6))


cat("Study Area Boundaries:\n")
cat("Latitude:", gulf_bounds$lat_min, "to", gulf_bounds$lat_max, "°N\n")
cat("Longitude:", gulf_bounds$lon_min, "to", gulf_bounds$lon_max, "°W\n")
cat("\nTotal storm observations:", nrow(gulf_storms))
cat("\nUnique storms:", length(unique(gulf_storms$HID)))
cat("\nDate range:", min(gulf_storms$DATE), "to", max(gulf_storms$DATE))

```


```{r}
# I will attempt to use leaflet correctly to create an interactive map
# Rendering this map is computationally expensive....

names(gulf_storms) <- ifelse(names(gulf_storms) == "" | is.na(names(gulf_storms)), paste0("V", seq_along(names(gulf_storms))), names(gulf_storms))

recent_gulf_storms <- gulf_storms %>%
  mutate(YEAR = as.numeric(substr(DATE, 1, 4))) %>%
  filter(YEAR >= 1999) %>%
  slice(seq(1, n(), by = 5))

leaflet(recent_gulf_storms) %>%
  addTiles() %>%
  setView(lng = -90, lat = 25, zoom = 5) %>%
  addCircleMarkers(
    lng = ~LONGITUDE,
    lat = ~LATITUDE,
    color = ~case_when(
      STATUS == "HU" ~ "red",
      STATUS == "TS" ~ "orange",
      TRUE ~ "blue"
    ),
    radius = 3,
    clusterOptions = markerClusterOptions(), # This line adds clustering to the points
    popup = ~paste(
      "Storm Name:", HNAME, "<br>",
      "Date:", DATE, "<br>",
      "Status:", STATUS, "<br>",
      "Wind Speed:", WINDSPEED_KT, "kt"
    )
  ) %>%
  addLegend(
    position = "bottomright",
    colors = c("red", "orange", "blue"),
    labels = c("Hurricane", "Tropical Storm", "Other"),
    title = "Storm Status"
  )


```
We can put examples of code here if we want to include it, if not we can use include=FALSE


\newpage

# Findings

\newpage

# Conclusion

\newpage

# References {.unnumbered}

::: {#refs}
:::
